# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters

#from：表示当前模块的输入来自那一层的输出，-1表示来自上一层的输出。
#number: 表示当前模块的理论重复次数，实际的重复次数还要由上面的参数depth_multiple共同决定，决定网络模型的深度。
#module：模块类名，通过这个类名去common.py中寻找相应的类，进行模块化的搭建网络。
#args: 是一个list，模块搭建所需参数，channel，kernel_size，stride，padding，bias等。会在网络搭建过程中根据不同层进行改变：
#BottleneckCSP, C3, C3TR:


nc: 16  # number of classes
depth_multiple: 0.67  # model depth multiple
width_multiple: 0.75  # layer channel multiple
anchors: 4
#  - [4,5, 8,10, 15,11]  # P3/8
#  - [10,13, 16,30, 33,23]  # P3/8
#  - [30,61, 62,45, 59,119]  # P4/16
#  - [116,90, 156,198, 373,326]  # P5/32


backbone:
  # [from, number, module, args]
  [ [ -1, 1, Conv, [ 64, 6, 2, 2 ] ],  # 0-P1/2
    [ -1, 1, Conv, [ 128, 3, 2 ] ],  # 1-P2/4
    [ -1, 3, C3, [ 128 ] ],
    [ -1, 1, Conv, [ 256, 3, 2 ] ],  # 3-P3/8
    [ -1, 6, C3, [ 256 ] ],
    [ -1, 1, Conv, [ 512, 3, 2 ] ],  # 5-P4/16
    [ -1, 9, C3, [ 512 ] ],
    [ -1, 1, Conv, [ 1024, 3, 2 ] ],  # 7-P5/32
    [ -1, 3, C3STR, [ 1024 ] ],
    [ -1, 1, SPPF, [ 1024, 5 ] ],  # 9
  ]



head:
  [[-1, 1, Conv, [512, 1, 1]],                      #10
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],      #11
   [[-1, 6], 1, BiFPN_Add2, [384, 384]],  # cat backbone P4    #12
   [-1, 3, C3, [512, False]],                       #13
   [-1, 1, NAMAttention, [512]],                    #14

   [-1, 1, Conv, [256, 1, 1]],                      #15
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],      #16
   [[-1, 4], 1, BiFPN_Add2, [192, 192]],  # cat backbone P3    #17
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)    #18
   [-1, 1, NAMAttention, [256]],                    #19

   [ -1, 1, Conv, [ 128, 1, 1 ] ],                  #20
   [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ],  #21
   [[-1, 2], 1, BiFPN_Add2, [96, 96]],              #22
   [ -1, 3, C3, [128] ],                            #23
   [-1, 1, NAMAttention, [128]],                    #24

   [ -1, 1, Conv, [256, 3, 2 ] ],                  #25
   [[-1, 19, 4], 1, BiFPN_Add3, [192,192]],  # cat head P3  书有问题 #26
   #[-1, 1, SPP, [256, [5, 9, 13]]],
   [-1, 3, C3, [256]] ,                          #27
   [-1, 1, NAMAttention, [256]],                    #28

   [-1, 1, Conv, [512, 3, 2]],                      #29
   [[-1, 14, 6], 1, BiFPN_Add3, [384, 384]],  # cat head P4   #30
   #[-1, 1, SPP, [512, [3, 7, 11]]],
   [-1, 3, C3, [512]],  #  (P4/16-medium)        #31
   [-1, 1, NAMAttention, [512]],                    #32

   [-1, 1, Conv, [512, 3, 2]],                      #33
   [[-1, 10], 1, BiFPN_Add2, [384, 384]],           #34
   [-1, 3, C3, [1024]],                    #  (P5/32-large)  #35
   [-1, 1, NAMAttention, [1024]],                   #36

   [[24, 28, 32, 36], 1, Detect, [nc,anchors]],  # Detect(P2, P3, P4, P5)
  ]




